using System;

Arrow arrow = AskArrow();
Console.WriteLine($"Your arrow will cost {arrow.Cost} gold.");
Console.ReadKey();

Arrow AskArrow()
{
    Console.WriteLine("What kind of arrow would you like?");
    Console.WriteLine("1. Elite Arrow");
    Console.WriteLine("2. Beginner Arrow");
    Console.WriteLine("3. Marksmen Arrow");
    Console.WriteLine("4. Custom Arrow");
    int input = Convert.ToInt32(Console.ReadLine());
    return arrow = input switch
    {
        1 => Arrow.CreateEliteArrow(),
        2 => Arrow.CreateBeginnerArrow(),
        3 => Arrow.CreateMarksmenArrow(),
        4 => GetArrow(),
        _ => GetArrow()
    };
}

Arrow GetArrow()
{   Arrowhead arrowhead = GetArrowheadType();
    Fletching fletching = GetFletchingType();
    float length = GetLength();
    return new Arrow(arrowhead, fletching, length);
}

Fletching GetFletchingType()
{
    Console.WriteLine("What fletching would you like? Enter 1-3");
    Console.WriteLine("1. Plastic (10 gold)");
    Console.WriteLine("2. Turkey Feather (5 gold)");
    Console.WriteLine("3. Goose Feather (3 gold)");
    int input = Convert.ToInt32(Console.ReadLine());
        return input switch
    {
        1 => Fletching.plastic,
        2 => Fletching.turkeyfeathers,
        3 => Fletching.goosefeathers
    };
}

Arrowhead GetArrowheadType()
{
    Console.WriteLine("What arrowhead would you like? Enter 1-3");
    Console.WriteLine("1. steel (10 gold)");
    Console.WriteLine("2. wood (3 gold)");
    Console.WriteLine("3. obsidian (5 gold)");
    int input = Convert.ToInt32(Console.ReadLine());

    return input switch
    {
        1 => Arrowhead.steel,
        2 => Arrowhead.wood,
        3 => Arrowhead.obsidian
    };
}

float GetLength()
{
    float length = 0;
    while (length < 60 || length > 100)
    {
        Console.WriteLine("Enter a length between 60 and 100");
        length = Convert.ToInt32(Console.ReadLine());
    }
    return length;

}

class Arrow
{
    private Arrowhead Arrowhead { get; } = 0;
    private Fletching Fletching { get; } = 0;
    private float Length { get; } = 0;

    public Arrowhead GetArrowhead() => Arrowhead;
    public Fletching GetFletching() => Fletching;
    public float GetLength() => Length;

    public Arrow(Arrowhead arrowhead, Fletching fletching, float length)
    {
        Arrowhead = arrowhead;
        Fletching = fletching;
        Length = length;
    }

    public static Arrow CreateEliteArrow()
    {
        Arrow EliteArrow = new Arrow(Arrowhead.steel, Fletching.plastic, 95);
        return EliteArrow;
    }

    public static Arrow CreateBeginnerArrow()
    {
        Arrow BeginnerArrow = new Arrow(Arrowhead.wood, Fletching.goosefeathers, 75);
        return BeginnerArrow;
    }

    public static Arrow CreateMarksmenArrow()
    {
        Arrow MarksmenArrow = new Arrow(Arrowhead.steel, Fletching.goosefeathers, 65);
        return MarksmenArrow;
    }

    public float Cost
    {
      get
        {
            float arrowheadCost = Arrowhead switch
            {
                Arrowhead.steel => 10,
                Arrowhead.wood => 3,
                Arrowhead.obsidian => 5
            };
            float fletchingCost = Fletching switch
            {
                Fletching.plastic => 10,
                Fletching.turkeyfeathers => 5,
                Fletching.goosefeathers => 3
            };

            float lengthCost = 0.05f * Length;
            return arrowheadCost + fletchingCost + lengthCost;
        }
    }
}
enum Arrowhead { steel, wood, obsidian }
enum Fletching { plastic, turkeyfeathers, goosefeathers }
